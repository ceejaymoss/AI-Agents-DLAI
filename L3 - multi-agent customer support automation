# In terminal
#!pip install crewai==0.28.8 crewai_tools==0.1.6 langchain_community==0.0.29

#
# Warning control
import warnings
warnings.filterwarnings('ignore')
#

#
from crewai import Agent, Task, Crew
#

#
import os
from utils import get_openai_api_key

openai_api_key = get_openai_api_key()
os.environ["OPENAI_MODEL_NAME"] = 'gpt-3.5-turbo'
#

#
# Roleplaying, focus and cooperation
support_agent = Agent(
    role="Senior Support Representative",
	goal="Be the most friendly and helpful "
        "support representative in your team",
	backstory=(
		"You work at crewAI (https://crewai.com) and "
        " are now working on providing "
		"support to {customer}, a super important customer "
        " for your company."
		"You need to make sure that you provide the best support!"
		"Make sure to provide full complete answers, "
        " and make no assumptions."
	),
	allow_delegation=False,
	verbose=True
)
#

# Note: ** By not setting allow_delegation=False, allow_delegation takes its default value of being True. **
# Note: ** This means the agent can delegate its work on another agent which is better suited to doing a particular task **

#
support_quality_assurance_agent = Agent(
	role="Support Quality Assurance Specialist",
	goal="Get recognition for providing the "
    "best support quality assurance in your team",
	backstory=(
		"You work at crewAI (https://crewai.com) and "
        "are now working with your team "
		"on a request from {customer} ensuring that "
        "the support representative is "
		"providing the best support possible.\n"
		"You need to make sure that the support representative "
        "is providing full"
		"complete answers, and make no assumptions."
	),
	verbose=True
)
#

# Note: ** Roleplaying: Both agents have been given a role, goal and backstory **
# Note: ** Focus: Both agents have been prompted to get into the character of roles they are playing **
# Note: ** Cooperation: Support Quality Assurance Agent can delegate work back to the Support Agent, allowing these agents to work together


# Tools, Guardrails and Memory

# Tools
from crewai_tools import SerperDevTool, \
                         ScrapeWebsiteTool, \
                         WebsiteSearchTool
#

# Possible custom tools
# Load customer data, tap into previous conversations, load data from CRM, checking existing bug reports
# cheking existing feature requests, checking ongoing tickets and more

# Some ways of using Crew AI Tools
# search_tool = SerperDevTool()
# scrape_tool = ScrapeWebsiteTool()

#
docs_scrape_tool = ScrapeWebsiteTool(
    website_url="https://docs.crewai.com/how-to/Creating-a-Crew-and-kick-it-off/"
)
#



                         

